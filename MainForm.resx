<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>